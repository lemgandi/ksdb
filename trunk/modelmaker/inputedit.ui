<!DOCTYPE UI><UI version="3.3" stdsetdef="1">
<class>inputEditor</class>
<widget class="QDialog">
    <property name="name">
        <cstring>inputEditor</cstring>
    </property>
    <property name="geometry">
        <rect>
            <x>0</x>
            <y>0</y>
            <width>600</width>
            <height>480</height>
        </rect>
    </property>
    <property name="caption">
        <string>Input Fields</string>
    </property>
    <grid>
        <property name="name">
            <cstring>unnamed</cstring>
        </property>
        <widget class="QGroupBox" row="0" column="0">
            <property name="name">
                <cstring>TextInputGroupBox</cstring>
            </property>
            <property name="maximumSize">
                <size>
                    <width>352</width>
                    <height>296</height>
                </size>
            </property>
            <property name="title">
                <string>Text Input Fields</string>
            </property>
            <hbox>
                <property name="name">
                    <cstring>unnamed</cstring>
                </property>
                <widget class="QLabel">
                    <property name="name">
                        <cstring>FieldNameLabel</cstring>
                    </property>
                    <property name="text">
                        <string>Field Name</string>
                    </property>
                </widget>
                <widget class="QLineEdit">
                    <property name="name">
                        <cstring>fieldNameEdit</cstring>
                    </property>
                </widget>
            </hbox>
        </widget>
    </grid>
</widget>
<connections>
    <connection>
        <sender>fieldNameEdit</sender>
        <signal>textChanged(const QString&amp;)</signal>
        <receiver>inputEditor</receiver>
        <slot>nameFieldChanged(const QString&amp;)</slot>
    </connection>
</connections>
<includes>
    <include location="global" impldecl="in declaration">qstring.h</include>
    <include location="global" impldecl="in declaration">qlineedit.h</include>
    <include location="global" impldecl="in declaration">qmap.h</include>
    <include location="local" impldecl="in declaration">typedefs.h</include>
    <include location="global" impldecl="in implementation">qstring.h</include>
    <include location="local" impldecl="in implementation">mockeditfield.h</include>
    <include location="local" impldecl="in implementation">screenmaker.h</include>
    <include location="local" impldecl="in implementation">weditlineedithandler.h</include>
    <include location="local" impldecl="in implementation">wedittextedithandler.h</include>
    <include location="global" impldecl="in implementation">qvalidator.h</include>
    <include location="local" impldecl="in implementation">inputedit.ui.h</include>
</includes>
<forwards>
    <forward>class screenMaker;</forward>
</forwards>
<variables>
    <variable>QString currentNameField;</variable>
    <variable>fieldVals fields;</variable>
    <variable>const QWidget *wTemplate;</variable>
    <variable>const screenMaker *scrMakerWidget;</variable>
</variables>
<signals>
    <signal>accepted(const fieldVals &amp;,QWidget *)</signal>
    <signal>unconditionally_accepted(const fieldVals &amp;,QWidget *);</signal>
</signals>
<slots>
    <slot>nameFieldChanged( const QString &amp; newFieldNameData )</slot>
    <slot>query( const QString &amp; addressedName )</slot>
    <slot>getWidgetTemplate( const QWidget * wp, const screenMaker * s )</slot>
    <slot>clearFields()</slot>
    <slot>setData( const fieldVals &amp; widgetData )</slot>
    <slot>sizeChange( QWidget * w, fieldVals * wd )</slot>
</slots>
<functions>
    <function access="private" specifier="non virtual">init()</function>
    <function returnType="QWidget *">makeNewWidget( QString &amp; widgetType )</function>
</functions>
<pixmapinproject/>
<layoutdefaults spacing="6" margin="11"/>
</UI>
